#https://leetcode.com/problems/two-sum/description/
#Example 1:

#Input: nums = [2,7,11,15], target = 9
#Output: [0,1]
#Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
#Example 2:

#Input: nums = [3,2,4], target = 6
#Output: [1,2]
#Example 3:

#Input: nums = [3,3], target = 6
#Output: [0,1]


class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        num_map = {}
        for i, num in enumerate(nums): 
            #example: nums = [2, 7, 11, 15]
                # i=0, num=2
                # i=1, num=7
                # i=2, num=11
            complement = target - num
            if complement in num_map:
                return [num_map[complement], i] #Checks if we've already seen the needed complement
            num_map[num] = i
