#https://leetcode.com/problems/sliding-window-maximum/description/

from collections import deque
from typing import List

class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        result = []
        dq = deque()  # stores indices of elements in decreasing order
        n = len(nums)

        for i in range(n):
            # Remove indices outside the current window
            while dq and dq[0] < i - k + 1:
                dq.popleft()

            # Remove indices of smaller elements from the back
            while dq and nums[dq[-1]] < nums[i]:
                dq.pop()

            dq.append(i)  # Add current index

            # Append max to result once the first window is formed
            if i >= k - 1:
                result.append(nums[dq[0]])
            #print(i)    
            #print(dq)    
            #print(result)

        return result
