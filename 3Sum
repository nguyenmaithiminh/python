#https://leetcode.com/problems/3sum/

class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        subnums = [[],[],[]]
        result = []
        for item in nums:
            if item < 0:
                subnums[0].append(item)
            elif item == 0:
                subnums[1].append(item)
            else:
                subnums[2].append(item)
        print(subnums[0],subnums[1],subnums[2])
        print(len(subnums[0]),len(subnums[1]),len(subnums[2]))
        if (len(subnums[0]) == 0 and len(subnums[2]) == 0 and len(subnums[1]) < 3) or (len(subnums[0]) != 0 and len(subnums[2]) == 0 and len(subnums[1]) < 3) or (len(subnums[0]) == 0 and len(subnums[2]) != 0 and len(subnums[1]) < 3):
            #print('case 1')
            result = []
        if len(subnums[1]) >= 3:
            result.append([0,0,0])
        
        #Case(pos,0,neg)
        if len(subnums[1]) >= 1:
            if len(subnums[0]) <= len(subnums[2]): 
                for item1 in set(subnums[0]):
                    if (item1*(-1)) in set(subnums[2]):                        
                        result.append([item1,0,-item1])
            else:
                for item1 in set(subnums[2]):
                    if (item1*(-1)) in set(subnums[0]):                       
                        result.append([item1,0,-item1])
        if len(subnums[0]) >= 2:
            print('case 4')
            for i in range(0,len(subnums[0])-1):                
                for k in range(i+1,len(subnums[0])):
                    sum2i = 0
                    sum2i = subnums[0][i] + subnums[0][k]
                    print(sum2i)
                    if (sum2i*(-1)) in set(subnums[2]):
                        result.append([subnums[0][i], subnums[0][k],(sum2i*(-1))])
        if len(subnums[2]) >= 2:
            for j in range(0,len(subnums[2])-1):                
                for l in range(j+1,len(subnums[2])):
                    sum2j = 0
                    sum2j = subnums[2][j] + subnums[2][l]
                    if (sum2j*(-1)) in set(subnums[0]):
                        print('case 5')
                        result.append([subnums[2][j], subnums[2][l],(sum2j*(-1))]) 

        seen = set()
        unique_lists = []

        for lst in result:
            sorted_tuple = tuple(sorted(lst))
            if sorted_tuple not in seen:
                seen.add(sorted_tuple)
                unique_lists.append(lst)

        return unique_lists
